# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on: 
  workflow_dispatch:
  #push:
   # branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

jobs:
  Build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
  Test:
    name: Run Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [Build]
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      #- name: Build and Run Tests
        #run: mvn test --batch-mode --fail-at-end
      - run: mvn -B package --file pom.xml -DskipTests 
      - run: mvn install -DskipTests
      - run: mvn clean test --batch-mode -Dmaven.test.failure.ignore=true
  Artifact:
      #if: github.event.inputs.Artifact == 'true'  
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      needs: [Test]
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-java@v1
          with:
            java-version: 17
        - run: mvn -B package --file pom.xml -DskipTests
        - uses: josStorer/get-current-time@v2
          id: current-time
          with:
            format: YYYYMMDD-HH
            utcOffset: "+08:00"
        - name: Use current time    
          env:
              TIME: "${{ steps.current-time.outputs.time }}"
              R_TIME: "${{ steps.current-time.outputs.readableTime }}"
              F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
              YEAR: "${{ steps.current-time.outputs.year }}"
              DAY: "${{ steps.current-time.outputs.day }}"
          run: echo $TIME $R_TIME $F_TIME $YEAR $DAY
        - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
        - uses: actions/upload-artifact@v1
          with:
            name: Package-${{ steps.current-time.outputs.formattedTime }}
            path: staging       
        - name: Publish Test Report
          uses: mikepenz/action-junit-report@v3
          if: always() # always run even if the previous step fails
          with:
            report_paths: '**/surefire-reports/TEST-*.xml' 
        
        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Docker build
          run: |
            docker build . -t hegdeshashi/hegdeshashi-agility:${{ steps.bump.outputs.jar_version }} -f Dockerfile
        - name: Docker push
          run: |
            docker push hegdeshashi/hegdeshashi-agility:${{ steps.bump.outputs.jar_version }}
